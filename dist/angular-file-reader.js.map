{"version":3,"sources":["../angular-file-reader.js"],"names":["angular","module","service","transformToFormData","data","getHeaders","appendFormData","formData","key","value","window","File","append","name","Blob","FormData","forEach","Array","i","length","directive","scope","fileread","link","element","attrs","bind","changeEvent","$apply","target","files","console","log","fileChangedHandler"],"mappings":";;AAAAA,QAAQC,MAAR,CAAe,qBAAf,EAAsC,EAAtC,EACKC,OADL,CACa,qBADb,EACoC,CAAC,YAAY;AACzC,SAAKC,mBAAL,GAA2B,UAAUC,IAAV,EAAgBC,UAAhB,EAA4B;AACnD,iBAASC,cAAT,CAAwBC,QAAxB,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8C;AAC1C,gBAAIA,iBAAiBC,OAAOC,IAA5B,EAAkC;AAC9BJ,yBAASK,MAAT,CAAgBJ,GAAhB,EAAqBC,KAArB,EAA4BA,MAAMI,IAAlC;AACA;AACH;;AAED,gBAAIJ,iBAAiBC,OAAOI,IAA5B,EAAkC;AAC9BP,yBAASK,MAAT,CAAgBJ,GAAhB,EAAqBC,KAArB,EAA4BD,MAAM,MAAlC;AACA;AACH;;AAED,gBAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;AAC9BF,yBAASK,MAAT,CAAgBJ,GAAhB,EAAqBC,KAArB;AACA;AACH;AACJ;;AAED,YAAIF,WAAW,IAAIG,OAAOK,QAAX,EAAf;AACAf,gBAAQgB,OAAR,CAAgBZ,IAAhB,EAAsB,UAAUK,KAAV,EAAiBD,GAAjB,EAAsB;AACxC,gBAAIC,iBAAiBQ,KAArB,EAA4B;AACxB,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIT,MAAMU,MAA1B,EAAkCD,GAAlC,EAAuC;AACnCZ,mCAAeC,QAAf,EAAyBC,MAAM,GAAN,GAAYU,CAAZ,GAAgB,GAAzC,EAA8CT,MAAMS,CAAN,CAA9C;AACH;AACJ,aAJD,MAIO;AACHZ,+BAAeC,QAAf,EAAyBC,GAAzB,EAA8BC,KAA9B;AACH;AACJ,SARD;;AAUA,eAAOF,QAAP;AACH,KA9BD;AA+BH,CAhC+B,CADpC,EAkCKa,SAlCL,CAkCe,UAlCf,EAkC2B,CAAC,YAAY;AAChC,WAAO;AACHC,eAAO;AACHC,sBAAU;AADP,SADJ;AAIHC,cAAM,cAAUF,KAAV,EAAiBG,OAAjB,EAA0BC,KAA1B,EAAiC;AACnCD,oBAAQE,IAAR,CAAa,QAAb,EAAuB,UAAUC,WAAV,EAAuB;AAC1CN,sBAAMO,MAAN,CAAa,YAAY;AACrBP,0BAAMC,QAAN,GAAiBK,YAAYE,MAAZ,CAAmBC,KAAnB,CAAyB,CAAzB,CAAjB;;AAEAC,4BAAQC,GAAR,CAAYL,WAAZ;;AAEA,wBAAIF,MAAMQ,kBAAV,EAA8B;AAC1BjC,gCAAQwB,OAAR,CAAgBA,OAAhB,EAAyBH,KAAzB,GAAiCI,MAAMQ,kBAAvC,EAA2DZ,MAAMC,QAAjE;AACH;AACJ,iBARD;AASH,aAVD;AAWH;AAhBE,KAAP;AAkBH,CAnBsB,CAlC3B","file":"angular-file-reader.js","sourcesContent":["angular.module('angular-file-reader', [])\n    .service('requestTransformers', [function () {\n        this.transformToFormData = function (data, getHeaders) {\n            function appendFormData(formData, key, value) {\n                if (value instanceof window.File) {\n                    formData.append(key, value, value.name);\n                    return;\n                }\n\n                if (value instanceof window.Blob) {\n                    formData.append(key, value, key + '.png');\n                    return;\n                }\n\n                if (typeof value !== 'undefined') {\n                    formData.append(key, value);\n                    return;\n                }\n            }\n\n            var formData = new window.FormData();\n            angular.forEach(data, function (value, key) {\n                if (value instanceof Array) {\n                    for (var i = 0; i < value.length; i++) {\n                        appendFormData(formData, key + '[' + i + ']', value[i]);\n                    }\n                } else {\n                    appendFormData(formData, key, value);\n                }\n            });\n\n            return formData;\n        };\n    }])\n    .directive('fileread', [function () {\n        return {\n            scope: {\n                fileread: '='\n            },\n            link: function (scope, element, attrs) {\n                element.bind('change', function (changeEvent) {\n                    scope.$apply(function () {\n                        scope.fileread = changeEvent.target.files[0];\n\n                        console.log(changeEvent);\n\n                        if (attrs.fileChangedHandler) {\n                            angular.element(element).scope()[attrs.fileChangedHandler](scope.fileread);\n                        }\n                    });\n                });\n            }\n        };\n    }])\n;"]}